<?xml version="1.0"?>

<!-- Web app deployment descriptor. -->
<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
    version="2.4">
  
  <!-- =====================================================================
       General web application properties
       ===================================================================== -->
  
  <!-- web application name -->
  <display-name>Compliant WebApp</display-name>
  <!-- web application description -->
  <description>Compliant WebApp</description>
  
  <!-- =====================================================================
       General web application configuration (esp. Log4j & Spring)
       ===================================================================== -->
  
  <!-- Used in Log4j.properties: 
       Key of the system property that should specify the root directory of this
       web app. Applied by WebAppRootListener or Log4jConfigListener. -->
  <context-param>
    <param-name>webAppRootKey</param-name>
    <param-value>compliant.root</param-value>
  </context-param>

  <!-- Location of the Log4J config file (used by Spring), Applied by Log4jConfigListener. -->
  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <!-- our log4j configuration file path -->
    <param-value>/WEB-INF/log4j.properties</param-value>
  </context-param>

  <!-- Location of the Spring XML file that defines the root application context.
       Used by ContextLoaderListener to specify applicaiton-wide context/beans/etc. -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <!-- the global sprint configuration -->
    <param-value>/WEB-INF/applicationContext.xml</param-value>
  </context-param>

	<!-- =====================================================================
		Global Spring initialisation
		===================================================================== -->

	<!-- Class loaded during web app startup, Configures Log4J for this web app.
		Uses context-param s "log4jConfigLocation" and "WebAppRootKey". -->
	<!-- Apparently not compatible with the JBoss container. -->
  	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<!-- The Spring root application context, loaded during web app startup. 
		Loads configuration from "/WEB-INF/applicationContext.xml" by default, 
		overriden by context-param "contextConfigLocation", above. 
       
		(apparently) use WebApplicationContextUtils.getWebApplicationContext(servletContext)
		to access it anywhere in the web application, outside of the framework.

		The root context is the parent of all servlet-specific contexts.
		This means that its beans are automatically available in these child contexts,
		both for getBean(name) calls and (external) bean references. -->
       
	<!-- Note listener apparently doesn't work with J2EE servers that do not follow 
		the Servlet 2.4 initialization order - have to use ContextLoaderServlet instead. -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- =====================================================================
		Servlet configuration 
		===================================================================== -->

	<!-- database -->
	
	<servlet>
		<servlet-name>db</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>db</servlet-name>
		<url-pattern>/db/*</url-pattern>
	</servlet-mapping>
  
  	<!-- orchestration interface -->
  
	<servlet>
		<servlet-name>orchestration</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>orchestration</servlet-name>
		<url-pattern>/orchestration/*</url-pattern>
	</servlet-mapping> 
	
	<!-- authoring interface -->
	
	<servlet>
		<servlet-name>author</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>author</servlet-name>
		<url-pattern>/author/*</url-pattern>
	</servlet-mapping> 
	
	<!-- rpc interface -->
	
	<servlet>
		<servlet-name>rpc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>rpc</servlet-name>
		<url-pattern>/rpc/*</url-pattern>
	</servlet-mapping> 		
	
	<!-- =====================================================================
		General web application configuration - home, errors, etc.
		===================================================================== -->

	<!-- what file/path should be return when a request is made for the web application path itself? -->
	<welcome-file-list>
		<!-- a static test file for now -->
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>

	<security-constraint>
		<display-name>EQUIP2 Operator login</display-name>
		<web-resource-collection>
			<web-resource-name>Operator Area</web-resource-name>
			<!-- remove comments to require basic authentication
			<url-pattern>/author/*</url-pattern>
			<url-pattern>/db/*</url-pattern>
			<url-pattern>/foh/index.html</url-pattern>
			<url-pattern>/orchestration/*</url-pattern> -->
		</web-resource-collection>
		<auth-constraint>
			<role-name>operator</role-name>
		</auth-constraint>
	</security-constraint>	
  		
	<login-config>
		<auth-method>BASIC</auth-method>
		<realm-name>EQUIP2 Operator Application</realm-name>
	</login-config>

	<security-role>
		<role-name>operator</role-name>
	</security-role>  

</web-app>
